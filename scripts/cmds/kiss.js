const fs = require("fs-extra");
const path = require("path");
const axios = require("axios");
const jimp = require("jimp");

module.exports = {
  config: {
    name: "kiss",
    aliases: [],
    version: "2.0.0",
    author: "ЁЭРВЁЭРШЁЭРБЁЭРДЁЭРС тШвя╕П_ЁЦгШ -ЁЭРБЁЭРОЁЭРУ тЪая╕П ЁЭС╗ЁЭСмЁЭСиЁЭС┤_ тШвя╕П",
    countDown: 5,
    role: 0,
    shortDescription: "Kiss the person you want ЁЯТЛ",
    longDescription: "ржПржХржЬржиржХрзЗ ржорзЗржирж╢ржи ржХрж░рзЗ рж╕рзБржирзНржжрж░ kiss ржлрзНрж░рзЗржо рждрзИрж░рж┐ ржХрж░рзЛ ЁЯШШ",
    category: "fun",
    guide: {
      en: "{pn} @mention"
    }
  },

  onStart: async function ({ event, message }) {
    const mention = Object.keys(event.mentions);
    const senderID = event.senderID;

    if (mention.length !== 1)
      return message.reply("Please tag 1 person! ЁЯШШ");

    const dir = path.join(__dirname, "cache");
    const bgPath = path.join(dir, "kiss_bg.jpeg");

    // Folder рждрзИрж░рж┐
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });

    // ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб ржирж╛ ржерж╛ржХрж▓рзЗ ржбрж╛ржЙржирж▓рзЛржб
    if (!fs.existsSync(bgPath)) {
      const imgURL = "https://i.imgur.com/j96ooUs.jpeg";
      const imgData = (await axios.get(imgURL, { responseType: "arraybuffer" })).data;
      fs.writeFileSync(bgPath, Buffer.from(imgData));
    }

    // ржмрзГрждрзНрждрж╛ржХрж╛рж░ ржЗржорзЗржЬ ржмрж╛ржирж╛ржирзЛ
    async function circle(imagePath) {
      const img = await jimp.read(imagePath);
      img.circle();
      return await img.getBufferAsync("image/png");
    }

    // ржорзВрж▓ ржЫржмрж┐ рждрзИрж░рж┐
    async function makeImage({ one, two }) {
      const bg = await jimp.read(bgPath);
      const pathImg = path.join(dir, `kiss_${one}_${two}.png`);
      const avatarOnePath = path.join(dir, `avt_${one}.png`);
      const avatarTwoPath = path.join(dir, `avt_${two}.png`);

      const getAvatar = async (uid, dest) => {
        const url = `https://graph.facebook.com/${uid}/picture?width=512&height=512&access_token=6628568379|c1e620fa708a1d5696fb991c1bde5662`;
        const res = await axios.get(url, { responseType: "arraybuffer" });
        fs.writeFileSync(dest, Buffer.from(res.data, "utf-8"));
      };

      await getAvatar(one, avatarOnePath);
      await getAvatar(two, avatarTwoPath);

      const circleOne = await jimp.read(await circle(avatarOnePath));
      const circleTwo = await jimp.read(await circle(avatarTwoPath));

      bg.resize(700, 440)
        .composite(circleOne.resize(150, 150), 390, 23)
        .composite(circleTwo.resize(150, 150), 115, 130);

      const output = await bg.getBufferAsync("image/png");
      fs.writeFileSync(pathImg, output);

      fs.unlinkSync(avatarOnePath);
      fs.unlinkSync(avatarTwoPath);

      return pathImg;
    }

    // тЭдя╕П Romantic captions
    const captions = [
      "ржХрж╛рж░ржгрзЗ ржЕржХрж╛рж░ржгрзЗ ржкрзНрж░рждрж┐ржжрж┐ржи ржирж┐ржпрж╝ржо ржХрж░рзЗ, рждрзЛржорж╛рж░ ржорж╛ржпрж╝рж╛рждрзЗ ржЬржбрж╝рж┐ржпрж╝рзЗ ржкржбрж╝ржЫрж┐ ржЖржорж┐ ржмрж╛рж░рзЗржмрж╛рж░!ЁЯМ╖",
      "рждрзЛржорж╛ржХрзЗ ржХрзЗржи ржнрж╛рж▓рзЛржмрж╛рж╕рж┐ рждрж╛рж░ ржХрзЛржи ржмрж┐рж╢рзЗрж╖ ржХрж╛рж░ржг ржЖржорж╛рж░ ржЬрж╛ржирж╛ ржирж╛ржЗ! ржХрж┐ржирзНрждрзБ рждрзЛржорж╛рж░ ржХрж╛ржЫрзЗ рж╕рж╛рж░рж╛ржЬрзАржмржи ржерзЗржХрзЗ ржпрж╛ржУржпрж╝рж╛рж░ рж╣рж╛ржЬрж╛рж░ржЯрж╛ ржХрж╛рж░ржг ржЖржорж╛рж░ ржХрж╛ржЫрзЗ ржЖржЫрзЗ!ЁЯТЪ",
      "рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржХрж╛ржЯрж╛ржирзЛ рж╕ржоржпрж╝ржЧрзБрж▓рзЛрж░ ржХржерж╛ ржЪрж┐ржирзНрждрж╛ ржХрж░рж▓рзЗ ржоржирзЗ рж╣ржпрж╝, ржПржЗ ржПржХ ржЬржиржо рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржЕржирзЗржХ ржХржо рж╕ржоржпрж╝!ЁЯШШ",
      "ржкрзНрж░рж┐ржпрж╝ рждрзБржорж┐ ржХрж┐ ржЖржорж╛рж░ ржЬрзАржмржирзЗрж░ рж╕рзЗржЗ ржЧрж▓рзНржк рж╣ржмрзЗ? ржпрзЗржЗ ржЧрж▓рзНржкрзЗрж░ рж╢рзБрж░рзБ ржерж╛ржХржмрзЗ, ржХрж┐ржирзНрждрзБ ржХрзЛржирзЛ рж╢рзЗрж╖ ржерж╛ржХржмрзЗ ржирж╛!тЩея╕П",
      "рждрзБржорж┐ ржкрж╛рж╢рзЗ ржерж╛ржХрж▓рзЗ рж╕ржмржХрж┐ржЫрзБ рж╕рзБржирзНржжрж░ ржоржирзЗ рж╣рзЯ, ржЬрзАржмржи ржпрзЗржи ржПржХржЯрж╛ ржоржзрзБрж░ ржХржмрж┐рждрж╛рзЯ рж░рзВржк ржирзЗрзЯ!ЁЯШН",
      "рждрзЛржорж╛ржХрзЗ ржЫрж╛рзЬрж╛ ржЬрзАржмржиржЯрж╛ ржЕрж╕ржорзНржкрзВрж░рзНржг, рждрзБржорж┐ ржЖржорж╛рж░ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛рж░ ржкрзВрж░рзНржгрждрж╛!ЁЯзб",
      "рждрзБржорж┐ ржЖржорж╛рж░ рж╕рзНржмржкрзНржи, рждрзБржорж┐ ржЖржорж╛рж░ ржЬрзАржмржирзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ рж╕рзБржирзНржжрж░ ржорзБрж╣рзВрж░рзНржд!ЁЯМ╗",
      "ржЖржорж╛рж░ ржЪрзЛржЦрзЗ рждрзЛржорж╛рж░ ржЕрж╕рзНржерж┐рждрзНржм ржЦрзЛржБржЬрждрзЗ ржПрж╕рзЛржирж╛, рж╣рж╛рж░рж┐ржпрж╝рзЗ ржпрж╛ржмрзЗ! ржХрзЗржиржирж╛ ржЖржорж╛рж░ ржкрзБрж░рзЛржЯрж╛-ржЬрзБрж░рзЗржЗ рждрзЛржорж╛рж░ржЗ ржирж┐рж░рзНржмрж╛ржХ ржЖржирж╛ржЧрзЛржирж╛!ЁЯМ║",
      "рждрзЛржорж╛рждрзЗ рж╢рзБрж░рзБ рждрзЛржорж╛рждрзЗржЗ рж╢рзЗрж╖, рждрзБржорж┐ ржирж╛ ржерж╛ржХрж▓рзЗ ржЖржорж╛ржжрзЗрж░ ржЧрж▓рзНржк ржПржЦрж╛ржирзЗржЗ рж╢рзЗрж╖!ЁЯШШ",
      "ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржпржжрж┐ ржХрзЛржирзЛ ржЕржирзБржнрзВрждрж┐ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ рждрзЛржорж╛рж░ ржкрзНрж░рждрж┐ ржЖржорж╛рж░ ржЕржирзБржнрзВрждрж┐ ржкрзГржерж┐ржмрзАрж░ рж╕рзЗрж░рж╛ ржЕржирзБржнрзВрждрж┐редЁЯМ╗сГжЁЯМ║"
    ];

    const caption = captions[Math.floor(Math.random() * captions.length)];

    try {
      const imagePath = await makeImage({ one: senderID, two: mention[0] });
      await message.reply({
        body: caption,
        attachment: fs.createReadStream(imagePath)
      });
      fs.unlinkSync(imagePath);
    } catch (err) {
      console.error(err);
      message.reply("тЭМ ржЫржмрж┐ржЯрж┐ рждрзИрж░рж┐ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ!");
    }
  }
};

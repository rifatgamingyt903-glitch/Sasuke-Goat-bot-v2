const schedule = require("node-schedule");
const chalk = require("chalk");

module.exports = {
  config: {
    name: "autosent",
    aliases: ["autotext", "autospam"],
    version: "10.0.1",
    author: "Shahadat Islam",
    countDown: 5,
    role: 0,
    shortDescription: {
      en: "Auto send message every hour (BD Time)"
    },
    longDescription: {
      en: "Automatically sends messages to all threads at scheduled times (Asia/Dhaka timezone)."
    },
    category: "automation",
    guide: {
      en: "{p}autosent"
    }
  },

  onLoad: async function ({ api }) {
    console.log(
      chalk.bold.hex("#00c300")(
        "============ AUTOSENT COMMAND LOADED (BD TIME) ============"
      )
    );

    const messages = [
      { time: "12:00 AM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶§ 12:00 AM ‚è≥\n‡¶Ö‡¶®‡ßá‡¶ï ‡¶∞‡¶æ‡¶§ ‡¶π‡¶≤‡ßã, ‡¶ò‡ßÅ‡¶Æ‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡¶°‡¶º Bby Good Night üò¥üí§‚ù§Ô∏è" },
      { time: "1:00 AM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶§ 1:00 AM ‚è≥\n‡¶ï‡¶ø‡¶∞‡ßá ‡¶§‡ßÅ‡¶á ‡¶è‡¶ñ‡¶®‡ßã ‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶∏ ‡¶®‡¶æ‡¶á? ‡¶§‡¶æ‡¶°‡¶º‡¶æ‡¶§‡¶æ‡¶°‡¶º‡¶ø ‡¶ò‡ßÅ‡¶Æ‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡¶°‡¶º!üòæüò¥üõå" },
      { time: "5:00 AM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶≠‡ßã‡¶∞ 5:00 AM ‚è≥\n‡¶´‡¶ú‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶ú‡¶æ‡¶® ‡¶π‡¶Ø‡¶º‡ßá ‡¶ó‡ßá‡¶õ‡ßá, ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡¶ü‡¶æ ‡¶™‡¶∞‡ßá ‡¶®‡¶ø‡¶ì ‡¶™‡¶ø‡¶ì~ üïå‚ú®ü§≤üíñ" },
      { time: "6:00 AM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∏‡¶ï‡¶æ‡¶≤ 6:00 AM ‚è≥\n‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ‡¶Ø‡¶º‡¶æ‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ Good Morning Bby! üåÖüíñ" },
      { time: "12:00 PM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞ 12:00 PM ‚è≥\nGood Afternoon! üåûüôåüå∏" },
      { time: "8:00 PM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶§ 8:00 PM ‚è≥\n‡¶ì‡¶á ‡¶ì‡¶á, ‡¶è‡¶§‡ßã bot bot ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶∏ ‡¶∞‡¶ø‡¶´‡¶æ‡¶§ ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶ó‡¶´ ‡¶¶‡ßá...!ü´∞üòéüî•" },
      { time: "11:00 PM", message: "‡¶è‡¶ñ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶∞‡¶æ‡¶§ 11:00 PM ‚è≥\n‡¶Ø‡ßá ‡¶õ‡ßá‡ßú‡ßá ‡¶ó‡ßá‡¶õ‡ßá üòî ‡¶§‡¶æ‡¶ï‡ßá ‡¶≠‡ßÅ‡¶≤‡ßá ‡¶Ø‡¶æ‡¶ì üôÇ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶∏ ‡¶∞‡¶ø‡¶´‡¶æ‡¶§ ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶™‡ßç‡¶∞‡ßá‡¶Æ ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶ï‡ßá ‡¶¶‡ßá‡¶ñ‡¶ø‡ßü‡ßá ‡¶¶‡¶æ‡¶ì...!üôàüê∏ü§ó" }
    ];

    messages.forEach(({ time, message }) => {
      const [hour, minute, period] = time.split(/[: ]/);
      let hour24 = parseInt(hour, 10);
      if (period === "PM" && hour !== "12") {
        hour24 += 12;
      } else if (period === "AM" && hour === "12") {
        hour24 = 0;
      }

      const rule = new schedule.RecurrenceRule();
      rule.tz = "Asia/Dhaka";
      rule.hour = hour24;
      rule.minute = parseInt(minute, 10);

      schedule.scheduleJob(rule, () => {
        if (!global.db.allThreadData) return;
        global.db.allThreadData.forEach((data, threadID) => {
          api.sendMessage(message, threadID, (error) => {
            if (error) {
              console.error(`Failed to send message to ${threadID}:`, error);
            }
          });
        });
      });

      console.log(chalk.hex("#00FFFF")(`Scheduled (BDT): ${time} => ${message}`));
    });
  },

  onStart: async function () {
    // ‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ
  }
};
